##################################################################
# nvim plugins

# [[plugins]]
# repo = 'carlitux/deoplete-ternjs'
# on_ft = ['javascript', 'javascript.jsx']
# on_i = 1
# hook_source = '''
# let g:tern_request_timeout = 1
# let g:tern#command = ['tern']
# let g:tern#arguments = ['--persistent']
# '''

# [[plugins]]
# repo = 'neoclide/coc.nvim'
# if = "has('nvim')"
# on_event = 'BufEnter'
# hook_add = '''
# source ~/.config/nvim/plugins/coc.rc.vim
# '''

# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# depends = 'context_filetype.vim'
# if = "has('nvim')"
# # on_i = 1
# on_event = 'BufEnter'
# hook_add = '''
# let g:deoplete#auto_complete_delay=50
# '''
# hook_source = '''
#   source ~/.config/nvim/plugins/deoplete.rc.vim
# '''

# [[plugins]]
# repo = 'zchee/deoplete-go'
# on_ft = 'go'
# build = 'make'

# [[plugins]]
# repo = 'tweekmonster/deoplete-clang2'
# on_ft = ['c', 'cpp', 'cc']
# hook_add = '''
# if has('mac')
#   let g:deoplete#sources#clang#flags = ['-darwin=10.11']
# endif
# '''

# [[plugins]]
# repo = 'zchee/deoplete-zsh'
# on_ft = ['sh', 'zsh']

# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# if = "has('nvim')"
# depends = 'deoplete'
# on_event = 'BufEnter'
# # on_i = 1
# hook_add = '''
# source  ~/.config/nvim/plugins/lang-client.rc.vim
# '''
# build = 'bash install.sh'
# rev = 'next'

# [[plugins]]
# repo = 'tbodt/deoplete-tabnine'
# if = "has('nvim')"
# depends = 'deoplete'
# on_event = 'BufEnter'
# build = 'bash install.sh'

# [[plugins]]
# repo = 'prabirshrestha/async.vim'
# on_event = 'BufEnter'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
if = "has('nvim')"
depends = 'async.vim'
on_event = 'BufEnter'
hook_add = '''
source  ~/.config/nvim/plugins/lsp.rc.vim
'''

# [[plugins]]
# repo = 'lighttiger2505/deoplete-vim-lsp'
# depends = ['vim-lsp', 'deoplete.nvim']
# on_event = 'BufEnter'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr>    pumvisible() ? "\<C-y>" : "\<cr>"
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
depends = 'asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
hook_add = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'file',
    \ 'whitelist': ['*'],
    \ 'priority': 10,
    \ 'completor': function('asyncomplete#sources#file#completor')
    \ }))
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-neosnippet.vim'h
depends = 'neosnippet.vim'
hook_add = '''
call asyncomplete#register_source(asyncomplete#sources#neosnippet#get_source_options({
    \ 'name': 'neosnippet',
    \ 'whitelist': ['*'],
    \ 'completor': function('asyncomplete#sources#neosnippet#completor'),
    \ }))
'''
